// Code generated by MockGen. DO NOT EDIT.
// Source: ../usecase.go

// Package mock_ip is a generated GoMock package.
package mock_ip

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockIpUseInter is a mock of IpUseInter interface
type MockIpUseInter struct {
	ctrl     *gomock.Controller
	recorder *MockIpUseInterMockRecorder
}

// MockIpUseInterMockRecorder is the mock recorder for MockIpUseInter
type MockIpUseInterMockRecorder struct {
	mock *MockIpUseInter
}

// NewMockIpUseInter creates a new mock instance
func NewMockIpUseInter(ctrl *gomock.Controller) *MockIpUseInter {
	mock := &MockIpUseInter{ctrl: ctrl}
	mock.recorder = &MockIpUseInterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIpUseInter) EXPECT() *MockIpUseInterMockRecorder {
	return m.recorder
}

// ResetIpCoolDown mocks base method
func (m *MockIpUseInter) ResetIpCoolDown(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetIpCoolDown", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResetIpCoolDown indicates an expected call of ResetIpCoolDown
func (mr *MockIpUseInterMockRecorder) ResetIpCoolDown(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetIpCoolDown", reflect.TypeOf((*MockIpUseInter)(nil).ResetIpCoolDown), arg0)
}

// RegisterIp mocks base method
func (m *MockIpUseInter) RegisterIp(arg0 string, arg1 time.Time) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterIp", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterIp indicates an expected call of RegisterIp
func (mr *MockIpUseInterMockRecorder) RegisterIp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterIp", reflect.TypeOf((*MockIpUseInter)(nil).RegisterIp), arg0, arg1)
}
